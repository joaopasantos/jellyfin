name: Pipeline CI/CD 
run-name: ${{ github.actor }} fez ${{ github.event_name }} e acionou a integra√ß√£o cont√≠nua.

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  SDK_VER: "8.0.x"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Faz checkout no reposit√≥rio.
      uses: actions/checkout@v4
    - name: Prepara ambiente DotNet necess√°rio para execu√ß√£o. üîß
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.SDK_VER }}
    - name: Apresenta vers√£o instalada do DotNet. üîç
      run: dotnet --list-sdks
    - name: Obtem depend√™ncias do projeto. üìú
      run: dotnet restore
    - name: Realiza o build do projeto.
      run: dotnet build --no-restore --configuration Release
  test:
    name: Test
    needs: build
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    runs-on: "${{ matrix.os }}"
    steps:
    - name: Faz checkout no reposit√≥rio.
      uses: actions/checkout@v4
    - name: Prepara ambiente DotNet necess√°rio para execu√ß√£o. üîß
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.SDK_VER }}
    - name: Executa testes utilizando a DotNet CLI. üß™
      run: >
        dotnet test Jellyfin.sln
        --configuration Release
        --collect:"XPlat Code Coverage"
        --settings tests/coverletArgs.runsettings
        --verbosity minimal
    - name: Merge code coverage results
      uses: danielpalme/ReportGenerator-GitHub-Action@v5
      with:
        reports: "**/coverage.xml"
        targetdir: "coveragereport"
        reporttypes: "HTML;MarkdownSummaryGithub"
    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport-${{ matrix.os }} # Artifact name        
        path: coveragereport # Directory containing files to upload
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs: test
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
    steps:
    - name: Faz checkout no reposit√≥rio.
      uses: actions/checkout@v4
    - name: Prepara ambiente DotNet necess√°rio para execu√ß√£o. üîß
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.SDK_VER }}
    - name: Inicializa o CodeQL.
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-extended
    - name: Executa autobuild para preparar artefato de an√°lise.
      uses: github/codeql-action/autobuild@v3
    - name: Executa an√°lise de c√≥digo. üïµÔ∏è
      uses: github/codeql-action/analyze@v3